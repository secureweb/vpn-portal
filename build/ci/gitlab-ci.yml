variables:
  DOCKER_REGISTRY: registry.gitlab.com
  DOCKER_REPOSITORY: $DOCKER_REGISTRY/$CI_PROJECT_PATH
  

  KUBECONFIG: ''
  # These are set by kubernetes integration.
  KUBE_INGRESS_BASE_DOMAIN: secureweb.ltd
  #KUBE_NAMESPACE:  

image: 
  name: lachlanevenson/k8s-helm:v3.0.0-beta.2
  entrypoint: [""]

stages:
  - build
  - container
  - review
  - production
  - testing
  - cleanup

build:
  stage: build
  image: golang
  script: make build
  artifacts:
    paths:
    - portal
    - web


make_container:
  stage: container
  image: tomkukral/buildah
  variables:
    STORAGE_DRIVER: vfs
  before_script:
    - podman login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY
  script:
    - podman build -f build/package/Dockerfile -t $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA .
    - podman inspect --format='{{index .RepoDigests 0}}' $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA > digest.txt
    - podman push $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA
  artifacts:
    paths:
    - digest.txt

review:
  stage: review
  script:
    #- helm delete $CI_ENVIRONMENT_SLUG
    - helm list -a 
    - helm upgrade --install --wait 
      --set image.portal=$DOCKER_REPOSITORY@$DIGEST
      --set ingress.host=$ENVIRONMENT_FQDN
      $CI_ENVIRONMENT_SLUG deployment/helm/vpn-portal
      --namespace=$KUBE_NAMESPACE
  after_script:
    - echo $CI_ENVIRONMENT_URL > environment_url.txt
  environment:
    name: review/$CI_COMMIT_REF_SLUG 
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN 
    on_stop: stop_review
  only:
    refs:
      - branches
      - tags
  except:
    refs:
      - master
  artifacts:
    paths:
    - environment_url.txt
  dependencies:
    - make_container

stop_review:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script: 
    - helm delete --purge $CI_ENVIRONMENT_SLUG
  environment:
    name: review/$CI_COMMIT_REF_SLUG 
    action: stop
  when: manual
  allow_failure: true
  only:
    refs:
      - branches
      - tags
  except:
    refs:
      - master

production:
  stage: production
  script:
    - helm upgrade --install --wait 
      --set image.repository=$DOCKER_REPOSITORY@$DOCKER_HASH_TYPE
      --set image.tag=$DOCKER_HASH
      --set ingress.hosts[0]=$ENVIRONMENT_FQDN
      $CI_ENVIRONMENT_SLUG-$CI_PROJECT_PATH_SLUG deployment/helm/website
      --namespace=$KUBE_NAMESPACE
  after_script:
    - echo $CI_ENVIRONMENT_URL > environment_url.txt
  environment:
    name: production
    url: https://vpn.$KUBE_INGRESS_BASE_DOMAIN
  only:
    refs:
      - master
  artifacts:
    paths:
    - environment_url.txt

.setup_env: &setup_env |
  set +x
  echo "setup_env"
  export DIGEST=$(cat digest.txt)
  export ENVIRONMENT_FQDN=${CI_ENVIRONMENT_URL:8}
  
before_script:
  - *setup_env